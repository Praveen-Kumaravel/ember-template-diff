{{status-notifier onClick=(action 'adjustLeftNavBar')}}

{{ui/progress-bar isLoading=isLoading}}

<div class="notification-wrap">
  {{#each flashMessages.queuedItems as |flash|}}
    {{flash-message class="notification-messages" flash=flash}}
  {{/each}}
</div>

<div class="wrapper-container {{if addClass 'left-navbar-adjust' '' }}" data-subscription-state="{{subscriptionState}}">

  {{!--
    TODO: The following sequential-render component is a hack to get the
    sequential rendering to fire properly on all routes. The sequential
    render system requires at least one instance with renderPriority=0
    to fire properly. Without the empty component below, this requirement
    is unmet for routes where the route template doesn't have a critical
    component wrapped with a sequential-render component with renderPriority
    of zero. This hack is a workaround for those cases.
  --}}
  {{#sequential-render
    renderPriority=0
    taskName="renderRoute"
    asyncRender=false as |routeRender|
  }}
    {{#routeRender.render-content}}
    {{/routeRender.render-content}}
  {{/sequential-render}}
  {{#sequential-render
    renderPriority=1
    taskName="renderTopNav"
    asyncRender=false as |topNavRenderer|
  }}
    {{#topNavRenderer.loader-state}}
      <div class="navbar-secondary">
        <div class="navbar-secondary-wrap">
          <span class="loader-shim top-left-shim"></span>
        </div>
        <div class="navbar-personal-wrap text-right">
          <span class="loader-shim loader-shim--circular"></span>
          <span class="loader-shim loader-shim--circular"></span>
          <span class="loader-shim loader-shim--circular"></span>
        </div>
      </div>
    {{/topNavRenderer.loader-state}}
    {{#topNavRenderer.render-content}}
      {{top-nav
        demoBooked=demoBooked
        isBusinessDomain=isBusinessDomain
        sideNavValues=sideNavValues
        demoStatus=demoBooking
        openCompose=(action 'openCompose')
        openLeadModal=(action 'openLeadModal' (hash mode='add'))
        openContactModal=(action 'openContactModal' (hash mode='add'))
        openAccountModal=(action 'openAccountModal' (hash mode='add'))
        openDealModal=(action 'openDealModal')
        openTaskModal=(action 'openTaskModal')
        openAppointmentModal=(action 'openAppointmentModal')
        openDashboardModal=(action 'openDashboardModal')
        openActivityModal=(action 'openActivityModal')
        openSendSmsModal=(action 'openSendSmsModal')
        openEmailTemplate=(action 'openEmailTemplate')
        registerSearchComponent=(action 'registerSearchComponent')
        navigateToRoute=(action 'navigateToRoute')
      }}
    {{/topNavRenderer.render-content}}
  {{/sequential-render}}

  {{#sequential-render
    renderPriority=1
    taskName="renderSideNav"
    asyncRender=false as |sideNavRenderer|
  }}
    {{#sideNavRenderer.loader-state}}
      {{#left-nav-bar showBrandLogo=false shimmerCount=6}}{{/left-nav-bar}}
    {{/sideNavRenderer.loader-state}}
    {{#sideNavRenderer.render-content}}
      {{#if sideNavValues}}
        {{#if isCRMAccount}}
          {{#if isBundleAccount}}
            {{unified-sidenav currentProduct="freshsales" logoutFunc = logoutUser lazyLoadWidgets = true marketplaceAdapter="marketplace-adapter" marketplaceInterface="marketplace-interface" parentModalStack="parent-modal-stack" sideNavValues=sideNavValues}}
          {{else}}
            {{unified-sidenav isBundleProduct=false currentProduct="freshsales" lazyLoadWidgets=true sideNavValues=sideNavValues}}
          {{/if}}
        {{else}}
          {{#unified-sidenav isBundleProduct=false currentProduct="freshsales" sideNavValues=sideNavValues}}
            {{external-integrations/marketplace-nav}}
            {{external-integrations/freshid-omnibar}}
          {{/unified-sidenav}}
        {{/if}}
      {{else}}
        {{#left-nav-bar showBrandLogo=true shimmerCount=6 portalCustomizedValue=portalCustomizedValue}}{{/left-nav-bar}}
      {{/if}}
    {{/sideNavRenderer.render-content}}
  {{/sequential-render}}  
  <div class="page-actions-carousel" id="carousel-area">
    {{!-- This is the DOM where carousel will be displayed --}}
  </div>
  {{#if (and showActionPanel skipActionPanel)}}
    <div class="page-actions-panel">
      <div class="page-actions-panel-cell" id="breadcrumb-area">
        {{!-- This is the DOM where the breadcrumb will be rendered. --}}
      </div>
      <div class="page-actions-panel-cell" id="recent-views-area">
        {{!-- This is the DOM where the recent views will be rendered. --}}
      </div>
      <div class="page-actions-panel-cell" id="pageaction-area" data-test-add-deal>
        {{!-- This is the DOM where the page specific action will be rendered. --}}
      </div>
    </div>
  {{/if}}
  <div class={{routeStyleNamespaceClassSet}}>
    {{outlet}}
  </div>
</div>

{{#each modalPopup.modalStack as |modal|}}
  {{ui-modal modal=modal}}
{{/each}}

{{#if renderSecondaryTools}}
  {{#if (has-access privilege="manage_phone")}}
    {{#if (and (has-access feature="phone") (not (has-access feature="freshcaller"))) }}
      {{widget-right-bottom}}
    {{/if}}
  {{/if}}

  {{inject-third-party}}

  {{#if (has-access feature='freshconnect')}}
      {{third-party/freshconnect}}
  {{/if}}

  {{#if showCTIPopupWrapper}}
    {{third-party/marketplace-apps/cti-popup-wrapper}}
  {{/if}}

  {{#if showFreshchatFaq}}
    {{third-party/freshchat-faq  sideNavValues=sideNavValues}}
  {{/if}}

  {{marketing-banner}}
{{/if}}
<div id="overlay-container" class="{{if addClass 'notification-shown'}}"></div>
{{#if showInAppCalendly}}
  {{calendly-widget isBusinessDomain=isBusinessDomain demoStatus=demoBooking}}
{{/if}}
